.TH OPENFORTIVPN 1 "October 23, 2017" ""

.SH NAME
openfortivpn \- Client for PPP+SSL VPN tunnel services

.SH SYNOPSIS
.B openfortivpn
[\fI<host>\fR:\fI<port>\fR]
[\fB\-u\fR \fI<user>\fR]
[\fB\-p\fR \fI<pass>\fR]
[\fB\-\-realm=\fI<realm>\fR]
[\fB\-\-set-routes=<bool>\fR]
[\fB\-\-no-routes\fR]
[\fB\-\-set-dns=<bool>\fR]
[\fB\-\-half-internet-routes=<bool>\fR]
[\fB\-\-no-dns\fR]
[\fB\-\-ca-file=\fI<file>\fR]
[\fB\-\-user-cert=\fI<file>\fR]
[\fB\-\-user-key=\fI<file>\fR]
[\fB\-\-use-syslog\fR]
[\fB\-\-trusted-cert=\fI<digest>\fR]
[\fB\-\-insecure-ssl\fR]
[\fB\-\-cipher-list=\fI<ciphers>\fR]
[\fB\-\-pppd-no-peerdns\fR]
[\fB\-\-pppd-log=\fI<file>\fR]
[\fB\-\-pppd-plugin=\fI<file>\fR]
[\fB\-\-pppd-ipparam=\fI<string>\fR]
[\fB\-\-pppd-ifname=\fI<string>\fR]
[\fB\-\-persistent\fR]
[\fB\-c\fR \fI<file>\fR]
[\fB\-v|\-q\fR]
.br
.B openfortivpn
\-\-help
.br
.B openfortivpn
\-\-version

.SH DESCRIPTION
.B openfortivpn
connects to a VPN by setting up a tunnel to the gateway at
\fI<host>\fR:\fI<port>\fR.

.SH OPTIONS
.TP
\fB\-\-help\fR
Show this help message and exit.
.TP
\fB\-\-version\fR
Show version and exit.
.TP
\fB\-c \fI<file>\fR, \fB\-\-config=\fI<file>\fR
Specify a custom config file (default: @SYSCONFDIR@/openfortivpn/config).
.TP
\fB\-u \fI<user>\fR, \fB\-\-username=\fI<user>\fR
VPN account username.
.TP
\fB\-p \fI<pass>\fR, \fB\-\-password=\fI<pass>\fR
VPN account password.
.TP
\fB\-\-realm=\fI<realm>\fR
Connect to the specified authentication realm. Defaults to empty, which
is usually what you want.
.TP
\fB\-\-set-routes=\fI<bool>\fR, \fB\-\-no-routes\fR
Set if we should try to configure IP routes through the VPN when tunnel is up. If used multiple times, the last one takes priority.

\fB\-\-no-routes\fR is the same as \fB\-\-set-routes=\fI0\fR.
.TP
\fB\-\-half-internet-routes=\fI<bool>\fR, if set to 1, tells openfortivpn not to 
replace the default route by a different one, but set up two separate /1-routes instead.
.TP
\fB\-\-set-dns=\fI<bool>\fR, \fB\-\-no-dns\fR
Set if we should add VPN nameservers in /etc/resolv.conf when tunnel is up. If used multiple times, the last one takes priority.

\fB\-\-no-dns\fR is the same as \fB\-\-set-dns=\fI0\fR.
.TP
\fB\-\-ca-file=\fI<file>\fR
Use specified PEM-encoded certificate bundle instead of system-wide store to
verify the gateway certificate.
.TP
\fB\-\-user-cert=\fI<file>\fR
Use specified PEM-encoded certificate if the server requires authentication
with a certificate.
.TP
\fB\-\-user-key=\fI<file>\fR
Use specified PEM-encoded key if the server requires authentication with
a certificate.
.TP
\fB\-\-use-syslog\fR
Log to syslog instead of terminal.
.TP
\fB\-\-trusted-cert=\fI<digest>\fR
Trust a given gateway. If classical SSL certificate validation fails, the
gateway certificate will be matched against this value. \fI<digest>\fR is the
X509 certificate's sha256 sum. This option can be used multiple times to trust
several certificates.
.TP
\fB\-\-insecure-ssl\fR
Do not disable insecure SSL protocols/ciphers.
If your server requires a specific cipher, consider using \fB\-\-cipher-list\fR
instead.
.TP
\fB\-\-cipher-list=\fI<ciphers>\fR
Openssl ciphers to use. If default does not work, you can try alternatives
such as HIGH:!MD5:!RC4 or as suggested by the Cipher: line in the output of
\fBopenssl\fP(1) (e.g. AES256-GCM-SHA384):

$ openssl s_client -connect \fI<host:port>\fR

(default: HIGH:!aNULL:!kRSA:!PSK:!SRP:!MD5:!RC4)
.TP
\fB\-\-pppd-no-peerdns\fR
Do not ask peer ppp server for DNS server addresses and do not make pppd
rewrite /etc/resolv.conf.
.TP
\fB\-\-pppd-log=\fI<file>\fR
Set pppd in debug mode and save its logs into \fI<file>\fR.
.TP
\fB\-\-pppd-plugin=\fI<file>\fR
Use specified pppd plugin instead of configuring the resolver and routes
directly.
.TP
\fB\-\-pppd-ipparam=\fI<string>\fR
Provides an extra parameter to the ip-up, ip-pre-up and ip-down scripts. See man
.BR pppd(8)
for further details
.TP
\fB\-\-pppd-ifname=\fI<string>\fR
Set the ppp interface name. Only if supported by pppd. Patched versions of pppd
implement this option but may not be available on your platform.
\fB\-\-persistent\=\fI<interval>fR
Runs the vpn persistently in an endless loop and tries to reconnect forever.
The reconnect interval may be specified in seconds, where 0 means
no reconnect is done (this is the default).
.TP
\fB\-v\fR
Increase verbosity. Can be used multiple times to be even more verbose.
.TP
\fB\-q\fR
Decrease verbosity. Can be used multiple times to be even less verbose.

.SH ENVIRONMENT and proxy support
.B openfortivpn
can be run behind a http that supports the http connect command.
It checks if one of the environment variables
.B https_proxy HTTPS_PROXY all_proxy ALL_PROXY
is set which are supposed to contain a string of the format
.br
.B http://[host]:[port]
.br
where
.B [host]
is the ip or the fully qualified host name of the proxy server
.B [port]
is the tcp port number where the proxy is listening for
incoming connections. If one of these variables is defined,
.B openfortivpn
tries to first establish a tcp connection to this proxy (plain http, not encrypted),
and then makes a request to connect to the vpn host as given on the command line
or in the config file. The proxy is supposed to forward any subsequent packets
transparently to the vpn host, so that the tls layer of the connection effectively
is establshed between the client and the vpn host, and the proxy just acts as a
forwarding instance on the lower level of the tcp connection.

The following environment variables are set by
.B openfortivpn
and
.BR pppd(8)
or its scripts can obtain information this way:
.br
VPN_GATEWAY the ip of the gateway host
.br
and for each route three variables are set up, where an integer number
is appended to the variable names, denoting the number of the current route:
.br
VPN_ROUTE_DEST_... the destination network of the route
.br
VPN_ROUTE_MASK_... the network mask for this route
.br
VPN_ROUTE_GATEWAY_... the gateway for the current route entry

.SH CONFIG FILE
Options can be taken from a configuration file. Options passed in the command
line will override those from the config file, though. The default config file
is @SYSCONFDIR@/openfortivpn/config, but this can be set using the \fB\-c\fR option.
An empty template for the config file is installed to
@DATADIR@/config.template

.TP
A config file looks like:
# this is a comment
.br
host = vpn-gateway
.br
port = 8443
.br
username = foo
.br
password = bar
.br
user-cert = @SYSCONFDIR@/openfortivpn/user-cert.pem
.br
user-key = @SYSCONFDIR@/openfortivpn/user-key.pem
.br
# the sha256 digest of the trusted host certs obtained by
.br
# openssl dgst -sha256 server-cert.pem:
.br
trusted-cert = certificatedigest4daa8c5fe6c...
.br
trusted-cert = othercertificatedigest6631bf...
.br
# This would specify a ca bundle instead of system-wide store
.br
# ca-file = @SYSCONFDIR@/openfortivpn/ca-bundle.pem
.br
set-dns = 1
.br
set-routes = 1
.br
half-internet-routes = 0
.br
pppd-use-peerdns = 1
.br
# aternatively, use a specific pppd plugin instead
.br
# pppd-plugin = /usr/lib/pppd/default/some-plugin.so
.br
# for debugging pppd write logs here
.br
# pppd-log = /var/log/pppd.log
.br
# pass an ipparam string to pppd
.br
# pppd-ipparam = somestringtopasstopppd
.br
insecure-ssl = 0
.br
cipher-list = HIGH:!aNULL:!kRSA:!PSK:!SRP:!MD5:!RC4
.br
persistent = 0
